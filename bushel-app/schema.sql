DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS auth_tokens;
DROP TABLE IF EXISTS backlinks;
DROP TABLE IF EXISTS leaves;
DROP TABLE IF EXISTS branches;
DROP TABLE IF EXISTS roots;

PRAGMA foreign_keys = ON;

--NOTE THIS IS NOT USED NOW THAT I DO DB INIT THROUGH SQLALCHEMY

CREATE TABLE users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  alias TEXT,
  password TEXT NOT NULL
);

CREATE TABLE auth_tokens (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  token TEXT UNIQUE NOT NULL,
  user_id INTEGER NOT NULL,
  issued INTEGER NOT NULL,
  expires INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE backlinks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    parent_id INTEGER NOT NULL,
    target_id INTEGER NOT NULL,
    FOREIGN KEY (parent_id) REFERENCES leaves (id)
      ON UPDATE CASCADE
      ON DELETE CASCADE,
    FOREIGN KEY (target_id) REFERENCES leaves (id)
      ON UPDATE CASCADE
      ON DELETE CASCADE
);

CREATE TABLE leaves (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  author_id INTEGER NOT NULL,
  parent_id INTEGER NOT NULL,
  uri TEXT UNIQUE NOT NULL,
  name TEXT NOT NULL,
  date INTEGER NOT NULL
);

CREATE TABLE branches (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  parent_id INTEGER NOT NULL,
  uri TEXT UNIQUE NOT NULL,
  name TEXT NOT NULL,
  default_id INTEGER
);

CREATE TABLE roots (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  uri TEXT UNIQUE NOT NULL
);